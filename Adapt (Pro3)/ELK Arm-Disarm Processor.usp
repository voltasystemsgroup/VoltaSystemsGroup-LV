/***********************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
***********************************************************************************/
/*
Dealer Name:	Crestron Electronics
System Name:
System Number:
Programmer:		PAC
Comments:
*/

/***********************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
***********************************************************************************/
#SYMBOL_NAME "ELK M1 Arm-Disarm Processor"
// #HINT ""
#DEFINE_CONSTANT	ciPASSCODEMAX			6	//The passcode can either be 4 or 6 digits.
#DEFINE_CONSTANT	ciPASSCODEMIN			4

// #CATEGORY "" 
#CATEGORY "21" // Security
#DEFAULT_VOLATILE
// #DEFAULT_NONVOLATILE
#ENABLE_STACK_CHECKING
#HELP_BEGIN
	For use inside the ELK M1 Area Control module only.
#HELP_END
/***********************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
***********************************************************************************/
ANALOG_INPUT	Area;	//The area that we are controlling.
DIGITAL_INPUT Arm[9];	//The 7 different arming conditions. 1 = Arm Away,
											//2 = Arm Stay, 3 = Arm Stay Instant, 4 = Arm Night,
											//5 = Arm Night Instant, 6 = Arm Vacation,
											//7 = Arm next away mode(same as exit button on ELK keypad),
											//8 = Arm next stay mode(same as stay button on ELK keypad),
											//9 = Disarm (actual command is 0 not 9)
STRING_INPUT	Passcode$[6];	//This is the passcode.

STRING_OUTPUT	To_Device$;	//Send commands.
/***********************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
***********************************************************************************/
INTEGER	iArea, iFlag1, iArm;
STRING	sPasscode[ciPASSCODEMAX];
/***********************************************************************************
  Functions
  (Add any additional functions here)
  Note:  Functions must be physically placed before the location in
         the code that calls them.
***********************************************************************************/
/***********************************************************************************
  sfProces
  	This function will calculate the check sum, append it to the end of the command
  and send it.
***********************************************************************************/
String_Function sfProcess(INTEGER fiARM)
{
	INTEGER fiA, fiCheckSum;
	STRING	fsCheckSum[4], fsTemp[20], fsReturn[20];
	fiCheckSum = 0;
	if(len(sPasscode) = ciPASSCODEMIN)
	{
		sPasscode = "00" + sPasscode;
	}
	makestring(fsTemp, "0Da%d%d%s00", fiArm, iArea, sPasscode);
	for(fiA = 1 to len(fsTemp))
	{
		fiCheckSum = fiCheckSum + byte(fsTemp, fiA);
	}
	fiCheckSum = 256 - (fiCheckSum mod 256);//2's complement
	makestring(fsReturn, "%s%02X\x0D\x0A", fsTemp, fiCheckSum);
	return(fsReturn);
}
/***********************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
***********************************************************************************/
PUSH Arm
{
	if(iFlag1 = 0)
	{
		iFlag1 = 1;
		iArm = getlastmodifiedarrayindex();
		if(iArm = 9)	//If the button pressed is disarm,
		{
			iArm = 0;	//set the command value to 0 not 9
		}
		if((len(sPasscode) = ciPASSCODEMAX) || (len(sPasscode) = ciPASSCODEMIN))
		{
			To_Device$ = sfProcess(iArm);
		}
		iFlag1 = 0;
	}
}

CHANGE Passcode$
{
	sPasscode = Passcode$;
}

CHANGE Area
{
	if((Area > 0) && (Area < 9))//Valid areas are 1 to 8
	{
		iArea = Area;
	}
}
/***********************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
***********************************************************************************/
Function Main()
{
	sPasscode = "";
	iFlag1 = 0;
	iArea = 1;	//Need to default to something.
}
