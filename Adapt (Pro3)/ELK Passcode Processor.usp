/***********************************************************************************
  SIMPL+ Module Information
  (Fill in comments below)
***********************************************************************************/
/*
Dealer Name:	Crestron Electronics
System Name:
System Number:
Programmer:		PAC
Comments:
*/

/***********************************************************************************
  Compiler Directives
  (Uncomment and declare compiler directives as needed)
***********************************************************************************/
#SYMBOL_NAME "ELK M1 Passcode Processor"
// #HINT ""
#DEFINE_CONSTANT	ciPASSCODEMAX			6
#DEFINE_CONSTANT	ciPASSCODEMIN			4

#DEFINE_CONSTANT	csEOM							"\x0D\x0A"
#DEFINE_CONSTANT	csSTATUSSTART			"1EAS"
// #CATEGORY "" 
#CATEGORY "21" // Security
#DEFAULT_VOLATILE
// #DEFAULT_NONVOLATILE
#ENABLE_STACK_CHECKING

#HELP_BEGIN
	This module is for use inside the ELK M1 Passcode module only.
#HELP_END
/***********************************************************************************
  DIGITAL, ANALOG and SERIAL INPUTS and OUTPUTS
  (Uncomment and declare inputs and outputs as needed)
***********************************************************************************/
DIGITAL_INPUT	Key_Clear, Key_BackSpace;
DIGITAL_INPUT Key[10];

/***********************************************************************************
	String outputs
		Passcode_Stars$ - This is a serial output that will show the passcode entered as
			stars. This would normally be displayed on a touch panel.
		Passcode$ - This MUST be routed to the Passcode$ input on the M1 Arm and M1 Zone
			Control modules.
***********************************************************************************/
STRING_OUTPUT	Passcode_Stars$, Passcode$;
/***********************************************************************************
  Global Variables
  (Uncomment and declare global variables as needed)
  Note:  Be sure to initialize all declared STRING variables as needed
         For example, in Function Main: myString = "";
***********************************************************************************/
INTEGER	iKey;
STRING	sPasscode[ciPASSCODEMAX], sPassStars[ciPASSCODEMAX];
/***********************************************************************************
  Event Handlers
  (Uncomment and declare additional event handlers as needed)
***********************************************************************************/
/***********************************************************************************
	Push Key
		This event handler will process the keypad presses. If the length of the
	passcode already entered is less than the max passcode length. The array index is
	the key number except that key 10 is really key 0.
***********************************************************************************/
PUSH Key
{
	if(len(sPasscode) < ciPASSCODEMAX)
	{
		iKey = getlastmodifiedarrayindex();
		if(iKey = 10)
		{
			iKey = 0;
		}
		sPasscode = sPasscode + itoa(iKey);
		sPassStars = sPassStars + "*";
		Passcode_Stars$ = sPassStars;
		Passcode$ = sPasscode;
	}
}
/***********************************************************************************
	Push Key_Clear
		This event handler will clear the previously entered passcode.
***********************************************************************************/
PUSH Key_Clear
{
	sPasscode = "";
	sPassStars = "";
	Passcode_Stars$ = sPassStars;
	Passcode$ = sPasscode;
}
/***********************************************************************************
	Push Key_Backspace
		This event handler will clear the last keypad button press.
***********************************************************************************/
Push Key_BackSpace
{
	if(len(sPasscode) > 0)
	{
		sPasscode = left(sPasscode, (len(sPasscode) - 1));
		sPassStars = left(sPassStars, (len(sPassStars) - 1));
		Passcode_Stars$ = sPassStars;
		Passcode$ = sPasscode;
	}
}
/***********************************************************************************
  Main()
  Uncomment and place one-time startup code here
  (This code will get called when the system starts up)
***********************************************************************************/
Function Main()
{
	sPasscode = "";
	sPassStars = "";
	Passcode_Stars$ = sPassStars;
	Passcode$ = sPasscode;
}
